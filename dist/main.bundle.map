{"version":3,"sources":["webpack:///./src/app/db.service.ts","webpack:///./src/app/todo-data.service.ts","webpack:///./src async","webpack:///./src/main.ts","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/todo-form.component.ts","webpack:///./src/app/todo.ts","webpack:///./src/environments/environment.ts","webpack:///./src/polyfills.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/todo-form.component.html"],"names":[],"mappings":"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","file":"main.bundle.js","sourcesContent":["import { Injectable } from '@angular/core';\r\nimport * as Datastore from 'nedb';\r\n\r\n@Injectable()\r\n\r\nexport class DbService {\r\n    public db: any;\r\n    constructor() {\r\n        this.db = new Datastore(({ filename: 'src/app/database/todo.db', autoload: true }));\r\n    }\r\n\r\n    public insert(data: any) {\r\n        this.db.insert(data, (err: any, newData: any) => {\r\n            if(data== null){\r\n                alert('input is empty');\r\n            }\r\n            if (err) throw err;\r\n            return newData;\r\n        })\r\n    }\r\n\r\n    public delete(data:any) {\r\n        this.db.remove(data, {}, function (err, numRemoved){\r\n            if(err) throw err;\r\n            return numRemoved\r\n        })\r\n    }\r\n\r\n    public check(data: any){\r\n        if(data.complete == false ){\r\n            data.complete = true\r\n        }\r\n\r\n        else{\r\n            data.complete = false\r\n        }\r\n        this.db.update({ _id: data._id}, {$set: { _complete:data._complete}},(err:any,numReplaced:any) => {\r\n        err ? console.error(err) :numReplaced;\r\n        });\r\n    }\r\n \r\n\r\n\r\n\r\n    public getAll() {\r\n        return this.db.getAllData();\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/db.service.ts","import {Injectable} from '@angular/core';\nimport {Todo} from './todo';\nimport { DbService } from './db.service';\n\n@Injectable()\nexport class TodoDataService {\n\n  // Placeholder for last id so we can simulate\n  // automatic incrementing of id's\n  lastId: number = 0;\n\n  // Placeholder for todo's\n  todos: Todo[] = [];\n  dbService: any;\n  constructor(dbService: DbService) {\n    this.dbService = dbService;\n  }\n\n  // Simulate ADD /todos\n  addTodo(todo: Todo): TodoDataService {\n    this.dbService.insert(todo)\n    return this;\n  }\n\n  // Simulate DELETE /todos/:id\n  deleteTodoById(todo: Todo): TodoDataService {\n    return this.dbService.delete(todo);\n  }\n\n\n  // Toggle todo check\n  toggleTodoComplete(todo: Todo): TodoDataService{\n     this.dbService.check(todo);\n     return this;\n  }\n\n  // Simulate PUT /todos/:id\n  updateTodoById(id: number, values: Object = {}): Todo {\n    let todo = this.getTodoById(id);\n    if (!todo) {\n      return null;\n    }\n    Object.assign(todo, values);\n    return todo;\n  }\n\n  // Simulate GET /todos\n  getAllTodos(): Todo[] {\n    return this.dbService.getAll();\n  }\n\n  // Simulate GET /todos/:id\n  getTodoById(id: number): Todo {\n    return this.todos\n      .filter(todo => todo.id === id)\n      .pop();\n  }\n\n  // // Toggle todo complete\n  // toggleTodoComplete(todo: Todo){\n  //   let updatedTodo = this.updateTodoById(todo.id, {\n  //     complete: !todo.complete\n  //   });\n  //   return updatedTodo;\n  // }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/todo-data.service.ts","function webpackEmptyContext(req) {\n\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = 349;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src async\n// module id = 349\n// module chunks = 0","import './polyfills.ts';\n\n\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\nimport { enableProdMode } from '@angular/core';\nimport { environment } from './environments/environment';\nimport { AppModule } from './app/app.module';\n\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule);\n\n\n\n// WEBPACK FOOTER //\n// ./src/main.ts","import {Component} from '@angular/core';\nimport {Todo} from './todo';\nimport {TodoDataService} from './todo-data.service';\n\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css'],\n  providers: [TodoDataService]\n})\nexport class AppComponent {\n\n  newTodo: Todo = new Todo();\n\n  constructor(private todoDataService: TodoDataService) {\n  }\n\n  addTodo() {\n    this.todoDataService.addTodo(this.newTodo);\n    this.newTodo = new Todo();\n  }\n\n  toggleTodoComplete(todo) {\n    this.todoDataService.toggleTodoComplete(todo);\n  }\n\n  removeTodo(todo) {\n    this.todoDataService.deleteTodoById(todo);\n  }\n\n  get todos() {\n    return this.todoDataService.getAllTodos();\n  }\n\n}\n\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.component.ts","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { HttpModule } from '@angular/http';\n\nimport { AppComponent } from './app.component';\nimport { TodoFormComponent } from './todo-form.component';\nimport { TodoDataService } from './todo-data.service';\nimport { DbService } from './db.service';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    TodoFormComponent\n  ],\n  imports: [\n    BrowserModule,\n    FormsModule,\n    HttpModule\n  ],\n  providers: [TodoDataService, DbService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n\n\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.module.ts","import { Component } from '@angular/core';\r\nimport { Todo }    from './todo';\r\n@Component({\r\n  moduleId: module.id,\r\n  selector: 'todo-form',\r\n  templateUrl: 'todo-form.component.html'\r\n})\r\n// export class TodoFormComponent {\r\n//    model = new Todo(18, 'Dr IQ');\r\n//   submitted = false;\r\n// onSubmit() { this.submitted = true; }\r\n\r\n// newTodo(){\r\n//   this.model = new Todo(42, '');\r\n// }\r\n\r\n\r\n// }\r\n\r\nexport class TodoFormComponent{\r\n  newTodo: string;\r\n  TodoList: any;\r\n\r\n  constructor(){\r\n    this.TodoList = [];\r\n  }\r\n\r\n  onsubmit(e){\r\n    // event.preventDefault();\r\n    this.TodoList.push(this.newTodo);\r\n    this.newTodo = '';\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/todo-form.component.ts","// dans cette classe on dit que chaque Todo aura aux moins 3 propriétés \n// un id un titre et complete qui determine si le todo est complété ou non\n\nexport class Todo {\n  id: number;\n  title: string = '';\n  complete: boolean = false;\n// facilite l'instanciation pas obliger de parametrer tous les champs dans le constructor\n  constructor(values: Object = {}) {\n    Object.assign(this, values);\n  }\n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/todo.ts","// The file contents for the current environment will overwrite these during build.\n// The build system defaults to the dev environment which uses `environment.ts`, but if you do\n// `ng build --env=prod` then `environment.prod.ts` will be used instead.\n// The list of which env maps to which file can be found in `angular-cli.json`.\n\nexport const environment = {\n  production: false\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/environments/environment.ts","// This file includes polyfills needed by Angular and is loaded before\n// the app. You can add your own extra polyfills to this file.\nimport 'core-js/es6/symbol';\nimport 'core-js/es6/object';\nimport 'core-js/es6/function';\nimport 'core-js/es6/parse-int';\nimport 'core-js/es6/parse-float';\nimport 'core-js/es6/number';\nimport 'core-js/es6/math';\nimport 'core-js/es6/string';\nimport 'core-js/es6/date';\nimport 'core-js/es6/array';\nimport 'core-js/es6/regexp';\nimport 'core-js/es6/map';\nimport 'core-js/es6/set';\nimport 'core-js/es6/reflect';\n\nimport 'core-js/es7/reflect';\nimport 'zone.js/dist/zone';\n\n\n\n// WEBPACK FOOTER //\n// ./src/polyfills.ts","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/app.component.css\n// module id = 628\n// module chunks = 0","module.exports = \"<section class=\\\"todoapp\\\">\\n  <header class=\\\"header\\\">\\n    <div class=\\\"row\\\">\\n      <div class=\\\"col s12 center\\\">\\n        <h1>Todo List</h1>\\n      </div>\\n    </div>\\n    <div class=\\\"row\\\">\\n      <div class=\\\"col s12 center\\\">\\n        <p class=\\\"footer\\\" *ngIf=\\\"todos.length > 0\\\">\\n          <span class=\\\"todo-count\\\"><strong>{{todos.length}}</strong> {{todos.length == 1 ? 'item' : 'items'}} left</span>\\n        </p>\\n      </div>\\n\\n    </div>\\n    <div class=\\\"row\\\">\\n      <div class=\\\"col offset-s3 s6  center\\\">\\n        <input class=\\\"new-todo\\\" placeholder=\\\"What needs to be done?\\\" autofocus=\\\"\\\" [(ngModel)]=\\\"newTodo.title\\\" (keyup.enter)=\\\"addTodo()\\\">\\n        <a placeholder=\\\"create\\\" type=\\\"submit\\\" class=\\\"waves-effect waves-light btn\\\" (click)=\\\"addTodo()\\\">create</a>\\n      </div>\\n    </div>\\n  </header>\\n  <style>\\n\\n  .under:hover{\\n    background-color: rgba(211, 211, 211, 0.22);\\n  }\\n\\n  </style>\\n<section class=\\\"main\\\" *ngIf=\\\"todos.length > 0\\\">\\n  <ul class=\\\"todo-list\\\" >\\n    <li *ngFor=\\\"let todo of todos\\\" [class.completed]=\\\"todo.complete\\\">\\n      <div class=\\\"row\\\">\\n        <div class=\\\"view col offset-s3 s6 under\\\">\\n\\n          <div class=\\\"col s10 align-left \\\">\\n\\n            <input id=\\\"{{todo.title}}\\\" class=\\\"toggle\\\" type=\\\"checkbox\\\" (click)=\\\"toggleTodoComplete(todo)\\\" [checked]=\\\"todo.complete\\\">\\n            <label for=\\\"{{todo.title}}\\\">{{todo.title}}</label>\\n\\n\\n          </div>\\n          <div class=\\\"col s2 center\\\">\\n            <a title=\\\"delete ?\\\"class=\\\"destroy  \\\" (click)=\\\"removeTodo(todo)\\\"><i class=\\\"small material-icons\\\" style=\\\"color:red;\\\">close</i></a>\\n          </div>\\n\\n</div>\\n</div>\\n</li>\\n\\n</ul>\\n</section>\\n\\n</section>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/app.component.html\n// module id = 629\n// module chunks = 0","module.exports = \"<div class=\\\"container\\\">\\r\\n    <h1>{{todoTitle}}</h1>\\r\\n    <form>\\r\\n      <div class=\\\"form-group\\\">\\r\\n        <label for=\\\"name\\\">Name</label>\\r\\n        <input type=\\\"text\\\"  class=\\\"form-control\\\" id=\\\"name\\\"\\r\\n       required\\r\\n       [(ngModel)]=\\\"model.name\\\" name=\\\"name\\\">\\r\\n  TODO: remove this: {{model.name}}\\r\\n\\r\\n      </div>\\r\\n<!--\\r\\n      <div class=\\\"form-group\\\">\\r\\n        <label for=\\\"alterEgo\\\">Alter Ego</label>\\r\\n        <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"alterEgo\\\">\\r\\n      </div>\\r\\n      <div class=\\\"form-group\\\">\\r\\n  <label for=\\\"power\\\">Hero Power</label>\\r\\n  <select class=\\\"form-control\\\" id=\\\"power\\\" required>\\r\\n    <option *ngFor=\\\"let pow of powers\\\" [value]=\\\"pow\\\">{{pow}}</option>\\r\\n  </select>\\r\\n</div>\\r\\n\\r\\n      <button type=\\\"submit\\\" class=\\\"btn btn-default\\\">Submit</button>-->\\r\\n    </form>\\r\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/todo-form.component.html\n// module id = 630\n// module chunks = 0"],"sourceRoot":""}